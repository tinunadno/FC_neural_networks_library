name: Build and Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y build-essential
          sudo apt install -y intel-mkl-64bit-2023
          sudo apt install -y libboost-dev
          sudo apt install -y libopencv-dev

      - name: Setup MKL on Ubuntu
        if: matrix.platform == 'ubuntu-latest'
        run: |
          echo "MKLROOT=/opt/intel/mkl" >> $GITHUB_ENV
          export MKLROOT=/opt/intel/mkl

      - name: Build Project
        run: |
          mkdir examples/gui_example/build && cd examples/gui_example/build
          cmake ..
          cmake --build .

      - name: Package Binary
        run: |
          cd examples/gui_example/build
          cp conv_lib_gui_example ../conv_lib_gui-${{ matrix.platform }}
          cd ..
          zip myapp-${{ matrix.platform }}.zip myapp-${{ matrix.platform }}

      - name: Upload Artifact
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ github.event.release.assets_url }}
          asset_path: ./myapp-${{ matrix.platform }}.zip
          asset_name: myapp-${{ matrix.platform }}.zip
          asset_content_type: application/zip